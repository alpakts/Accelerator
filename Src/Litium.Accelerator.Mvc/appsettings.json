{
  // This file setup Litium defaults configuration. 
  // Do the project configuration in the following files
  // - Use the appsettings.Development.json for the common development configuration,
  //   for developer specific settings the "User secrets" should be used, see 
  //   https://docs.microsoft.com/en-us/aspnet/core/security/app-secrets#manage-user-secrets-with-visual-studio
  // - Use the appsettings.Staging.json for staging or test configuration
  // - Use the appsettings.Production.json for production configuration
  // 
  // For each of these configuration files, copy the elements from appsettings.json that you want to override
  // and place them in any of the above files.
  "AllowedHosts": "*",
  "Litium": {
    "Scheduler": {
      "Policy": {
        "Litium.Auditing.CleanupScheduler": { "CronExpression": "0 45 0 1/1 * ? *" },
        "Litium.Customers.TargetGroups.CleanupScheduler": { "CronExpression": "0 13 0 ? * * *" },
        "Litium.Media.MediaItemsCleanupScheduler": { "CronExpression": "0 45 0 ? * * *" },
        "Litium.Products.PriceAgentScheduler": { "CronExpression": "0 45 0 ? * * *" },
        "Litium.Sales.OrderMaintenanceScheduler": { "CronExpression": "0 40 0 ? * * *" },
        "Litium.Sales.OrderPendingProcessingScheduler": { "CronExpression": "0 0/2 * 1/1 * ? *" },
        "Litium.Storefront.PurchaseHistory": { "CronExpression": "0 30 3 ? * * *" },
        "Litium.Websites.SitemapScheduler": { "CronExpression": "0 25 0 ? * * *" },
        "Litium.Websites.WebsitesItemsMaintenanceScheduler": { "CronExpression": "0 45 0 ? * * *" },
        "Litium.Accelerator.PurchaseHistory": { "CronExpression": "0 30 3 ? * * *" }
      }
    },
    "Data": {
      "ConnectionString": "Pooling=true;User Id=sa;Password=Pass@word;Database=litiumdb;Server=localhost,5434;TrustServerCertificate=True",
      "EnableSensitiveDataLogging": false
    },
    "Folder": {
      "Local": "../../files",
      "Shared": "../../shared"
    },
    "AdministrationSecurity": {
      "AllowWindowsCredential": false,
      "WindowsCredentialGroup": null,
      "UseSecureConnectionRedirection": true
    },
    "MediaLocation": {
      "CdnHosts": [
        // Contains the content delivery network hosts
        // "https://cdn.company.com"
      ]
    },
    "Plugin": {
      "Assembly": {
        // should contain the assembly name of the assemblies that should be loaded firsts, 
        // lasts and be ignored when loaded in the Dependency Injection. 
        // The format for the assembly name is "Litium.Dummy.Web"
        "Firsts": [],
        "Lasts": [],
        "Ignores": []
      },
      "Type": {
        // should contain the full type name of the types that should be loaded 
        // ignored when loaded in the Dependency Injection. 
        // The format for the type name is "Litium.Dummy.Web.MyClass, AssemblyName"
        "Ignores": []
      }
    },
    "Cache": {
      "Distributed": {
        //"DefaultMemorySlidingExpiration": 43200,
        //"DefaultDistributedSlidingExpiration": -1
      },
      "Entity": {
        "UseDistributedCache": true,
        "SlidingExpiration": {
          // should contain the full type name of the types and the value the sliding 
          // interval for the cache item. 
          // The format for the type name is "Litium.Dummy.Web.MyClass, AssemblyName"
          // Example:
          // "Litium.Customers.Organization, Litium.Abstractions": 3600,
          // "Litium.Products.Variant, Litium.Abstractions": 3600,
        }
      }
    },
    "IdentityServer": {
      "CertificatePfxPath": null,
      "CertificatePassword": null
    },
    "PasswordPolicy": {
      "LockoutCount": 3,
      "LockoutSeconds": 300,
      "RequireUppercase": false,
      "RequireDigit": false,
      "RequireLowercase": false,
      "RequireNonLetterOrDigit": false,
      "RequiredLength": 2
    },
    "ThumbnailGenerator": {
      "NavigationTimeoutMilliseconds": 30000,
      "BrowserExecutablePath": null
    },
    "ThreadPool": {
      // Setting default min threads.
      // If the ThreadPoolMinThreads property in project file is set this will be ignored.
      // MinWorkerThreads and MinIoThreads can be set separetly and will be used prior the MinThreads.
      "MinThreads": 200
    },
    "UrlValidator": {
      "InvalidCharacters": [
        "*"
      ],
      "InvalidWords": [
      ],
      "InvalidExtensions": [
        ".ashx"
      ]
    },
    "Sales": {
      "SynchronizationLockTimeout": 10, //per second
      "OrderNumberPrefix": "LS",
      "PaymentNumberPrefix": "LSP"
    },
    "Elasticsearch": {
      "ConnectionString": "http://localhost:9200",
      "Username": null,
      "Password": null,
      "Prefix": "LitiumEducation",
      "Synonym": {
        "Server": "http://synonymserver:80",
        "ApiKey": null
      }
    },
    "Redis": {
      "Prefix": null,
      "Cache": {
        "ConnectionString": null,
        "Password": null
      },
      "DistributedLock": {
        "ConnectionString": null,
        "Password": null
      },
      "ServiceBus": {
        "ConnectionString": null,
        "Password": null
      }
    },
    "Storefront": {
      "AuthenticationTokenLifetime": null
    },
    "Websites": {
      "Storefronts": {
        "localhost": {
          "host": "https://localhost:3001"
        }
      }
    },
    "Accelerator": {
      "Smtp": {
        "Host": "",
        "Port": 0,
        "Password": "",
        "Username": "",
        "EnableSecureCommunication": false
      }
    }
  },
  "ShippingConfig": {
    "ShippingOptions": [
      {
        "Id": "integratedShipping",
        "MerchantAccountId": "",
        "DeliveryCountries": null,
        "DeliveryTimeInDays": 0,
        "ShippingMethod": "other",
        "IntegrationType": "PaymentCheckout",
        "FeeType": "Calculated"
      },
      {
        "Id": "standardPackage",
        "MerchantAccountId": "",
        "DeliveryCountries": null,
        "DeliveryTimeInDays": 0,
        "ShippingMethod": "NormalPost",
        "IntegrationType": "inline",
        "FeeType": "Calculated"
      },
      {
        "Id": "expressPackage",
        "MerchantAccountId": "",
        "DeliveryCountries": null,
        "DeliveryTimeInDays": 0,
        "ShippingMethod": "NormalPost",
        "IntegrationType": "inline",
        "FeeType": "Calculated"
      },
      {
        "Id": "deliveryOptions",
        "MerchantAccountId": "",
        "DeliveryCountries": null,
        "DeliveryTimeInDays": 0,
        "ShippingMethod": "Other",
        "IntegrationType": "deliveryOptions",
        "FeeType": "Calculated"
      }
    ]
  },
  "DirectPay": {
    "PaymentAccounts": [
      {
        "Id": "DirectPay",
        "MerchantAccountId": null,
        "Environment": "Live"
      }
    ]
  }
}
